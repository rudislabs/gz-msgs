/*
 * Copyright (C) 2017 Open Source Robotics Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
*/

syntax = "proto3";
package gz.msgs;
option java_package = "com.gz.msgs";
option java_outer_classname = "UWBSensorProtos";

/// \ingroup gz.msgs
/// \interface UWBSensor
/// \brief Information about an uwb sensor 

///import "gz/msgs/sensor_noise.proto";
import "gz/msgs/header.proto";
///import "gz/msgs/vector3d.proto";

message UWBSensor
{
  /// \brief These are the azimuth and elevation of the 2 Uwb sensors with one being the controller (dev)
  ///        and the second being the responder (resp). The responder is point 0, 0, 0 and the controller
  ///        is at x, y, z relative to this position. The angles are related to the perspective of the device, i.e.
  ///        i.e. azimuth dev is the azimuth angle calculated from the perspective of the UWB on controller
  message AngleOfArrival
  {
    float aoa_azimuth             = 1;
    float aoa_elevation           = 2;
  }

  /// \brief Orientation reference frame information
  message OrientationReferenceFrame 
  {
    /// \brief This string represents special hardcoded use cases that are
    /// commonly seen with typical robot UWB's:
    ///   - NED: The UWB XYZ aligns with NED, where NED orientation relative
    ///          to the world is defined by the SphericalCoordinates class.
    ///   - ENU: The UWB XYZ aligns with ENU, where ENU orientation relative
    ///          to the world is defined by the SphericalCoordinates class.
    ///   - NWU: The UWB XYZ aligns with NWU, where NWU orientation relative
    ///          to the world is defined by the SphericalCoordinates class.
    string localization               = 1;
  }
  
  /// \brief Optional header data
  Header header                    = 1;
  
  /// \brief Orientation reference frame information.
  OrientationReferenceFrame orientation_ref_frame = 2;

  /// \brief Time since system start
  /// uint64 timestamp = 2;

  /// \brief Mac address of the sensor. 
  /// uint16 mac_address = 3
}
